class simulation{constructor({width:t,height:s,id:i,mapLoad:e,mapCreate:o,sceneCreated:h,zoom:r,mouse:a,debug:n,background:l}){if(r=r||.8,a=a||!0,n=n||!1,l=l||13421248,this.robots=[],this.walls=[],this.marks=[],this.zones=[],this.robotScene=new Simul(this.robots,this.walls,this.marks,this.zones,e,o,a),this.overlayScene=new Over(s,r),this.game=new Phaser.Game({width:t,height:s,backgroundColor:l,type:Phaser.WEBGL,canvas:document.getElementById(i),scene:[this.robotScene,this.overlayScene],physics:{default:"matter",matter:{gravity:{y:0,x:0},debug:n}},plugins:{scene:[{key:"PhaserRaycaster",plugin:PhaserRaycaster,mapping:"raycasterPlugin"}]}}),this.scenes=this.game.scene.scenes,void 0!==h){let t;t=setInterval((()=>{2==this.scenes.length&&this.overlayScene.cursor&&(clearInterval(t),h(this))}),500)}}wallCircle(t,s,i){return new wallCircle(this.scenes[0],t,s,i)}wallRect(t,s,i,e,o=0){return new wallRect(this.scenes[0],t,s,i,e,o)}wallPoly(t,s,i){return console.log("x y points",t,s,i),new wallPoly(this.scenes[0],t,s,i)}zoneCircle(t,s,i,e,o=16711680,h=.3){return new zoneCircle(this.scenes[0],t,s,i,e,o,h)}zoneRect(t,s,i,e,o,h,r=16711680,a=.3){return new zoneRect(this.scenes[0],scene,t,s,i,e,o,h,r,a)}zonePoly(t,s,i,e,o=16711680,h=.3){return new zonePoly(this.scenes[0],t,s,i,e,o,h)}markCircle(t,s,i){return new markCircle(this.scenes[0],t,s,i)}markRect(t,s,i,e,o=0){return new markRect(this.scenes[0],t,s,i,e,o)}markPoly(t,s,i){return new markPoly(this.scenes[0],t,s,i)}picture(t,s,i,e=0,o=1,h=1){return new Picture(this.scenes[0],t,s,i,e,o,h)}}class Simul extends Phaser.Scene{constructor(t,s,i,e,o,h,r){super("simulation"),this.mapLoad=o,this.mapCreate=h,this.robots=t,this.walls=s,this.marks=i,this.zones=e,this.mouse=r}async preload(){await this.load.json("liteShape","assets/liteShape.json"),await this.load.json("plusShape","assets/plusShape.json"),await this.load.spritesheet("liteBodyPic","assets/liteBody.png",{frameWidth:80,frameHeight:80}),await this.load.spritesheet("plusBodyPic","assets/plusBody.png",{frameWidth:100,frameHeight:103}),await this.mapLoad(this)}async create(){this.RaycasterDomain=[],await this.mapCreate(this),this.mouse&&this.matter.add.mouseSpring({stiffness:.001}).constraint,this.scene.launch("overlay",[this.robots,this.cameras.main])}update(){for(let t=0;t<this.zones.length;t++)this.zones[t].update();for(let t=0;t<this.robots.length;t++)this.robots[t].update()}}class Over extends Phaser.Scene{constructor(t,s){super("overlay"),this.height=t,this.initZoom=s}init(t){this.robots=t[0],this.camera=t[1]}async preload(){await this.load.image("echelle","assets/scale.png")}zoomOut(){this.camera.zoom/=1.2,this.echelle.scale/=1.2}zoomIn(){this.camera.zoom*=1.2,this.echelle.scale*=1.2}freeMode(){this.keyboardControl=!0,this.cursor.setPosition(15+this.buttons[0].width,110),this.camera.stopFollow()}followMode(t){this.keyboardControl=!1,this.cursor.setPosition(15+this.buttons[t+1].width,140+30*t),this.camera.startFollow(this.robots[t].body)}async create(){this.buttons=[],this.echelle=this.add.image(70,this.height-30,"echelle").setScale(this.initZoom),this.camera.zoom=this.initZoom,this.add.text(10,60,"-",{color:"#000",backgroundColor:"#fff",padding:1,fontSize:40}).setInteractive().on("pointerdown",(()=>this.zoomOut())),this.add.text(10,10,"+",{color:"#000",backgroundColor:"#fff",padding:1,fontSize:40}).setInteractive().on("pointerdown",(()=>this.zoomIn())),this.buttons.push(this.add.text(10,110,"Free",{color:"#000",backgroundColor:"#999",padding:3}).setInteractive().on("pointerdown",(()=>this.freeMode())));for(let t=0;t<this.robots.length;t++)this.buttons.push(this.add.text(10,140+30*t,this.robots[t].name,{color:"#000",backgroundColor:"#999",padding:3}).setInteractive().on("pointerdown",(()=>this.followMode(t))));this.cursor=this.add.text(0,0,"<=",{color:"#000",fontSize:20}),0==this.robots.length?(this.keyboardControl=!0,this.cursor.setPosition(15+this.buttons[0].width,113)):(this.keyboardControl=!1,this.cursor.setPosition(15+this.buttons[1].width,140),this.camera.startFollow(this.robots[0].body))}update(){if(this.keyboardControl){const t=this.input.keyboard.addKeys({up:"up",down:"down",left:"left",right:"right"});t.up.isDown?this.camera.scrollY-=5/this.camera.zoom:t.down.isDown&&(this.camera.scrollY+=5/this.camera.zoom),t.left.isDown?this.camera.scrollX-=5/this.camera.zoom:t.right.isDown&&(this.camera.scrollX+=5/this.camera.zoom)}}}class i2cPlus{constructor(t){this.robot=t,this.colors=[16711680,65280,16776960,255,16711935,65535,16777215,8421504],this.buffer=[]}write(t,s){if(16==t){const t=s[0];if(0==t){if(3==s.length){const t=s[1],i=s[2];this.robot.Lmotor.setSpeed(t,i)}else if(s.length>=5){const t=s[1],i=s[2],e=s[3],o=s[4];this.robot.Lmotor.setSpeed(t,i),this.robot.Rmotor.setSpeed(e,o)}this.buffer.push(this.robot.Rmotor.power,this.robot.Rmotor.dir,this.robot.Lmotor.power,this.robot.Lmotor.dir)}else if(2==t){const t=s[1],i=s[2];this.robot.Rmotor.setSpeed(t,i),this.buffer.push(this.robot.Rmotor.power,this.robot.Rmotor.dir)}else if(4==t)this.buffer.push(this.robot.Rmotor.angle%256,(this.robot.Rmotor.angle>>8)%256,this.robot.Lmotor.angle%256,(this.robot.Lmotor.angle>>8)%256);else if(11==t){if(s.length>=3){const t=this.colors[s[1]-1],i=this.colors[s[2]-1];this.robot.LLed.setColor(t),this.robot.RLed.setColor(i)}else if(2==s.length){const t=this.colors[s[1]-1];this.robot.LLed.setColor(t)}}else if(12==t){if(s.length>=2){const t=this.colors[s[1]-1];this.robot.RLed.setColor(t)}}else if(29==t){let t=0;this.robot.irL3.isMarked()&&(t+=32),this.robot.irL2.isMarked()&&(t+=16),this.robot.irL1.isMarked()&&(t+=8),this.robot.irR1.isMarked()&&(t+=4),this.robot.irR2.isMarked()&&(t+=2),this.robot.irR3.isMarked()&&(t+=1),this.buffer.push(t)}}}read(t,s){if(16==t){let t=[];for(let i=0;i<s;i++)t.push(this.buffer[this.buffer.length-i-1]);return t}}}class i2cLite{constructor(t){this.robot=t}write(t,s){if(16==t){const t=s[0];if(0==t){if(3==s.length){const t=s[1],i=s[2];this.robot.Lmotor.setSpeed(t,i)}else if(s.length>=5){const t=s[1],i=s[2],e=s[3],o=s[4];this.robot.Lmotor.setSpeed(t,i),this.robot.Rmotor.setSpeed(e,o)}}else if(2==t){const t=s[1],i=s[2];this.robot.Rmotor.setSpeed(t,i)}}}}class pin{constructor(t,s,i){this.component=t,this.read=s,this.write=i}read_digital(){return this.component[this.read]()}write_digital(t){this.component[this.write](t)}}class ultrasonicD{constructor(t,s,i,e,o=0,h=255,r=60){this.reference=s,this.scene=t,this.range=h,this.angle=o/180*Math.PI,this.deltaOrigin=Math.sqrt(i**2+e**2),this.rotationOrigin=Math.atan2(e,i),this.raycaster=t.raycasterPlugin.createRaycaster(),this.raycaster.mapGameObjects(t.RaycasterDomain),this.rayCone=this.raycaster.createRay({origin:{x:s.x+i,y:s.y+e},autoSlice:!0,collisionRange:10*h}).setConeDeg(r).setAngle(s.rotation+Math.PI/2+this.angle),this.rayCone.enablePhysics("matter"),this.raycaster.mapGameObjects(t.RaycasterDomain)}getDistance(){let t,s=[];this.raycaster.mapGameObjects(this.scene.RaycasterDomain),this.intersections=this.rayCone.castCone();for(let e=0;e<this.intersections.length;e++)t=Math.sqrt((this.intersections[e].x-this.rayCone.origin.x)**2+(this.intersections[e].y-this.rayCone.origin.y)**2),s.push(Math.round(t));let i=Math.min(...s);return i<10*this.range?Math.round(i/10):this.range}update(){this.rayCone.setOrigin(this.reference.x+this.deltaOrigin*Math.cos(this.reference.rotation+this.rotationOrigin),this.reference.y+this.deltaOrigin*Math.sin(this.reference.rotation+this.rotationOrigin)).setAngle(this.reference.rotation-Math.PI/2+this.angle)}}class infra{constructor(t,s,i,e,o=2,h=!0){this.scene=t,this.reference=s,this.deltaOrigin=Math.sqrt(i**2+e**2),this.rotationOrigin=Math.atan2(e,i),this.StateBlack=h,this.ir=t.matter.add.gameObject(t.add.circle(s.x+i,s.y+e,o,16777215),t.matter.add.circle(s.x+i,s.y+e,1)).setCollidesWith(0).setDepth(2)}isMarked(){for(let t=0;t<this.scene.marks.length;t++)if(this.scene.matter.overlap(this.ir,this.scene.marks[t].body)){const s=this.scene.marks[t];if("geom"==s.picture)return this.StateBlack;const i=Math.cos(-s.angle/180*Math.PI)*(this.ir.x-s.position.x)-Math.sin(-s.angle/180*Math.PI)*(this.ir.y-s.position.y),e=Math.sin(-s.angle/180*Math.PI)*(this.ir.x-s.position.x)+Math.cos(-s.angle/180*Math.PI)*(this.ir.y-s.position.y),o=this.scene.textures.getPixel(i/s.scale.x+s.body.width/2,e/s.scale.y+s.body.height/2,s.picture);if(null!==o&&o.v<.3&&o.a>=.5)return this.StateBlack}return!this.StateBlack}update(){this.ir.setPosition(this.reference.x+this.deltaOrigin*Math.cos(this.reference.rotation+this.rotationOrigin),this.reference.y+this.deltaOrigin*Math.sin(this.reference.rotation+this.rotationOrigin)),this.isMarked()?this.ir.fillColor=16777215:this.ir.fillColor=4210752}}class led{constructor(t,s,i,e,o=4){this.reference=s,this.on=!1,this.deltaOrigin=Math.sqrt(i**2+e**2),this.rotationOrigin=Math.atan2(e,i),this.led=t.add.circle(s.x+i,s.y+e,o,7995392).setDepth(2)}setOn(t){this.on=t}getOn(){return this.on}update(){this.led.setPosition(this.reference.x+this.deltaOrigin*Math.cos(this.reference.rotation+this.rotationOrigin),this.reference.y+this.deltaOrigin*Math.sin(this.reference.rotation+this.rotationOrigin)),this.on?this.led.fillColor=16711680:this.led.fillColor=7995392}}class rgbLed{constructor(t,s,i,e,o=5){this.reference=s,this.color=8421504,this.deltaOrigin=Math.sqrt(i**2+e**2),this.rotationOrigin=Math.atan2(e,i),this.rgb=t.add.circle(s.x+i,s.y+e,o,8421504).setDepth(2)}setColor(t){this.color=t}update(){this.rgb.setPosition(this.reference.x+this.deltaOrigin*Math.cos(this.reference.rotation+this.rotationOrigin),this.reference.y+this.deltaOrigin*Math.sin(this.reference.rotation+this.rotationOrigin)),this.rgb.fillColor=this.color}}class motor{constructor(t,s,i,e,o,h,r,a,n){this.scene=t,this.speed=0,this.power=0,this.dir=0,this.radius=h/20,this.angle=0,this.powToSpeed=n,this.deltaOrigin=Math.sqrt(i**2+e**2);const l=Math.sqrt(r.x**2+r.y**2),c=Math.sqrt(a.x**2+a.y**2);this.rotationOrigin=Math.atan2(e,i);const d=Math.atan2(r.y,r.x),y=Math.atan2(a.y,a.x);this.wheel=t.matter.add.gameObject(t.add.rectangle(s.x+this.deltaOrigin*Math.cos(this.rotationOrigin+s.rotation),s.y+this.deltaOrigin*Math.sin(this.rotationOrigin+s.rotation),o,h,8421504),t.matter.add.rectangle(s.x+this.deltaOrigin*Math.cos(this.rotationOrigin+s.rotation),s.y+this.deltaOrigin*Math.sin(this.rotationOrigin+s.rotation),o,h)).setRotation(s.rotation).setDepth(2).setFrictionAir(3),t.matter.add.constraint(this.wheel,s,void 0,1,{pointA:{x:h/2*Math.sin(-s.rotation),y:h/2*Math.cos(-s.rotation)},pointB:{x:l*Math.cos(d+s.rotation),y:l*Math.sin(d+s.rotation)}}),t.matter.add.constraint(this.wheel,s,void 0,1,{pointA:{x:h/2*Math.sin(-s.rotation),y:h/2*Math.cos(-s.rotation)},pointB:{x:c*Math.cos(y+s.rotation),y:c*Math.sin(y+s.rotation)}}),t.matter.add.constraint(this.wheel,s,void 0,1,{pointA:{x:h/2*Math.sin(s.rotation),y:-h/2*Math.cos(s.rotation)},pointB:{x:l*Math.cos(d+s.rotation),y:l*Math.sin(d+s.rotation)}}),t.matter.add.constraint(this.wheel,s,void 0,1,{pointA:{x:h/2*Math.sin(s.rotation),y:-h/2*Math.cos(s.rotation)},pointB:{x:c*Math.cos(y+s.rotation),y:c*Math.sin(y+s.rotation)}})}setSpeed(t,s){if(s>=0&&s<=255){this.dir=t,this.power=s;const i=this.powToSpeed(s)*this.radius*.12;i<0&&(this.speed=0),0==t?this.speed=0:1==t?this.speed=i:2==t&&(this.speed=-i)}}update(){const t=this.wheel.x-this.wheel.body.positionPrev.x,s=this.wheel.y-this.wheel.body.positionPrev.y,i=Math.round(Math.sqrt(t**2+s**2)/this.radius*(100/12)*5.6*100)/100;this.angle+=Math.round(i/Math.PI*2*80),this.wheel.body.positionImpulse.x=Math.cos(this.wheel.rotation-Math.PI/2)*this.speed,this.wheel.body.positionImpulse.y=Math.sin(this.wheel.rotation-Math.PI/2)*this.speed}}class maqueenLite{constructor(t,s,i,e,o){this.name=s,this.type="maqueenLite",this.angle=o,this.position={x:i,y:e},this.body=t.matter.add.sprite(i,e,"liteBodyPic",void 0,{shape:t.cache.json.get("liteShape").body}).setFrictionAir(0).setDepth(2).setAngle(o);let h=function(t){return-9e-9*t**4+7e-6*t**3-.0021*t**2+.3121*t-1.2};this.Lmotor=new motor(t,this.body,-35,18,9,43,{x:-10,y:-4},{x:-10,y:40},h),this.Rmotor=new motor(t,this.body,35,18,9,43,{x:10,y:-4},{x:10,y:40},h),this.ultrasonic=new ultrasonicD(t,this.body,0,-35),this.irL=new infra(t,this.body,-7,-16,2,!1),this.irR=new infra(t,this.body,7,-16,2,!1),this.LLed=new led(t,this.body,-18,-32),this.RLed=new led(t,this.body,18,-32),this.pin13=new pin(this.irL,"isMarked"),this.pin14=new pin(this.irR,"isMarked"),this.pin8=new pin(this.LLed,"getOn","setOn"),this.pin12=new pin(this.RLed,"getOn","setOn"),this.pin1,this.i2c=new i2cLite(this),t.robots.push(this)}getDistance(){return this.ultrasonic.getDistance()}update(){this.Lmotor.update(),this.Rmotor.update(),this.ultrasonic.update(),this.irL.update(),this.irR.update(),this.LLed.update(),this.RLed.update(),this.position={x:this.body.x,y:this.body.y},this.angle=this.body.angle}setPosition(t,s){this.body.setPosition(t,s),this.Lmotor.wheel.setPosition(t+this.Lmotor.deltaOrigin*Math.cos(this.Lmotor.rotationOrigin+this.body.rotation),s+this.Lmotor.deltaOrigin*Math.sin(this.Lmotor.rotationOrigin+this.body.rotation)),this.Rmotor.wheel.setPosition(t+this.Rmotor.deltaOrigin*Math.cos(this.Rmotor.rotationOrigin+this.body.rotation),s+this.Rmotor.deltaOrigin*Math.sin(this.Rmotor.rotationOrigin+this.body.rotation))}setAngle(t){this.body.setAngle(t),this.Lmotor.wheel.setPosition(this.body.x+this.Lmotor.deltaOrigin*Math.cos(t/180*Math.PI+this.Lmotor.rotationOrigin),this.body.y+this.Lmotor.deltaOrigin*Math.sin(t/180*Math.PI+this.Lmotor.rotationOrigin)),this.Lmotor.wheel.setAngle(t),this.Rmotor.wheel.setPosition(this.body.x+this.Rmotor.deltaOrigin*Math.cos(t/180*Math.PI+this.Rmotor.rotationOrigin),this.body.y+this.Rmotor.deltaOrigin*Math.sin(t/180*Math.PI+this.Rmotor.rotationOrigin)),this.Rmotor.wheel.setAngle(t)}}class maqueenPlus{constructor(t,s,i,e,o){this.name=s,this.type="maqueenPlus",this.angle=o,this.position={x:i,y:e},this.body=t.matter.add.sprite(i,e,"plusBodyPic",void 0,{shape:t.cache.json.get("plusShape").body}).setFrictionAir(0).setDepth(2).setAngle(o);let h=function(t){return-1e-8*t**4+1e-5*t**3-.0032*t**2+.4053*t-2.8394};this.Lmotor=new motor(t,this.body,-45,27,9,43,{x:-10,y:5},{x:-10,y:49},h),this.Rmotor=new motor(t,this.body,45,27,9,43,{x:10,y:5},{x:10,y:49},h),this.ultrasonic=new ultrasonicD(t,this.body,0,-21),this.irL1=new infra(t,this.body,-5,-31),this.irL2=new infra(t,this.body,-15,-31),this.irL3=new infra(t,this.body,-45,-11),this.irR1=new infra(t,this.body,5,-31),this.irR2=new infra(t,this.body,15,-31),this.irR3=new infra(t,this.body,45,-11),this.LLed=new rgbLed(t,this.body,-20,-45),this.RLed=new rgbLed(t,this.body,20,-45),this.i2c=new i2cPlus(this),t.robots.push(this)}getDistance(){return this.ultrasonic.getDistance()}update(){this.Lmotor.update(),this.Rmotor.update(),this.ultrasonic.update(),this.irL1.update(),this.irL2.update(),this.irL3.update(),this.irR1.update(),this.irR2.update(),this.irR3.update(),this.LLed.update(),this.RLed.update(),this.position={x:this.body.x,y:this.body.y},this.angle=this.body.angle}setPosition(t,s){this.body.setPosition(t,s),this.Lmotor.wheel.setPosition(t+this.Lmotor.deltaOrigin*Math.cos(this.Lmotor.rotationOrigin+this.body.rotation),s+this.Lmotor.deltaOrigin*Math.sin(this.Lmotor.rotationOrigin+this.body.rotation)),this.Rmotor.wheel.setPosition(t+this.Rmotor.deltaOrigin*Math.cos(this.Rmotor.rotationOrigin+this.body.rotation),s+this.Rmotor.deltaOrigin*Math.sin(this.Rmotor.rotationOrigin+this.body.rotation))}setAngle(t){this.body.setAngle(t),this.Lmotor.wheel.setPosition(this.body.x+this.Lmotor.deltaOrigin*Math.cos(t/180*Math.PI+this.Lmotor.rotationOrigin),this.body.y+this.Lmotor.deltaOrigin*Math.sin(t/180*Math.PI+this.Lmotor.rotationOrigin)),this.Lmotor.wheel.setAngle(t),this.Rmotor.wheel.setPosition(this.body.x+this.Rmotor.deltaOrigin*Math.cos(t/180*Math.PI+this.Rmotor.rotationOrigin),this.body.y+this.Rmotor.deltaOrigin*Math.sin(t/180*Math.PI+this.Rmotor.rotationOrigin)),this.Rmotor.wheel.setAngle(t)}}class markRect{constructor(t,s,i,e,o,h=0){this.picture="geom",this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=h,this.body=t.matter.add.gameObject(t.add.rectangle(s,i,e,o,0)).setCollidesWith(0).setAngle(h),t.marks.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class markCircle{constructor(t,s,i,e){this.picture="geom",this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.circle(s,i,e,0),t.matter.add.circle(s,i,e)).setCollidesWith(0),t.marks.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class markPoly{constructor(t,s,i,e){this.picture="geom",this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.polygon(s,i,e,0),{shape:{type:"fromVerts",verts:e,flagInternal:!0}}).setStatic(!0).setCollidesWith(0),t.marks.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class Picture{constructor(t,s,i,e,o=0,h=1,r=1){this.picture=s,this.position={x:i,y:e},this.scale={x:h,y:r},this.angle=o,this.body=t.matter.add.image(i,e,s).setCollidesWith(0).setScale(h,r).setAngle(o),t.marks.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class wallRect{constructor(t,s,i,e,o,h=0){this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=h,this.body=t.matter.add.gameObject(t.add.rectangle(s,i,e,o,16711680)).setStatic(!0).setAngle(h),t.walls.push(this),t.RaycasterDomain.push(this.body)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class wallCircle{constructor(t,s,i,e){this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.circle(s,i,e,16711680),t.matter.add.circle(s,i,e)).setStatic(!0).setFriction(1),t.walls.push(this),t.RaycasterDomain.push(this.body)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class wallPoly{constructor(t,s,i,e){this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.polygon(s,i,e,16711680),{shape:{type:"fromVerts",verts:e,flagInternal:!0}}).setStatic(!0).setFriction(1),t.walls.push(this),t.RaycasterDomain.push(this.body)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}}class zoneRect{constructor(t,s,i,e,o,h,r,a=16711680,n=.3){this.scene=t,this.callback=r,this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=h,this.body=t.matter.add.gameObject(t.add.rectangle(s,i,e,o)).setStatic(!0).setCollidesWith(0).setAngle(h).setFillStyle(a,n),t.zones.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}update(){for(let t=0;t<this.scene.robots.length;t++)this.scene.matter.overlap(this.body,this.scene.robots[t].body)&&this.callback(this.scene.robots[t],this)}}class zoneCircle{constructor(t,s,i,e,o,h=16711680,r=.3){this.scene=t,this.callback=o,this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.circle(s,i,e),t.matter.add.circle(s,i,e)).setStatic(!0).setCollidesWith(0).setFillStyle(h,r),t.zones.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}update(){for(let t=0;t<this.scene.robots.length;t++)this.scene.matter.overlap(this.body,this.scene.robots[t].body)&&this.callback()}}class zonePoly{constructor(t,s,i,e,o,h=16711680,r=.3){this.scene=t,this.callback=o,this.activated=!1,this.position={x:s,y:i},this.scale={x:1,y:1},this.angle=0,this.body=t.matter.add.gameObject(t.add.polygon(s,i,e,16711680),{shape:{type:"fromVerts",verts:e,flagInternal:!0}}).setStatic(!0).setCollidesWith(0).setFillStyle(h,r),t.zones.push(this)}setPosition(t,s){this.body.setPosition(t,s),this.position={x:t,y:s}}setAngle(t){this.body.setAngle(t),this.angle=t}setScale(t,s){this.body.setAngle(0),this.body.setScale(t,s),this.body.setAngle(this.angle),this.scale={x:t,y:s}}update(){for(let t=0;t<this.scene.robots.length;t++)this.scene.matter.overlap(this.body,this.scene.robots[t].body)&&this.callback(this,this.scene.robots[t])}}